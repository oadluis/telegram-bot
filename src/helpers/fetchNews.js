async function fetchNews(bot, newsApiKey, chatId, topic, fromDate, toDate) {
  const axios = require('axios');
  try {
    if (!topic || !fromDate || !toDate) {
      console.error('Par√¢metros inv√°lidos:', { topic, fromDate, toDate });
      bot.sendMessage(chatId, '‚ùå Erro: Par√¢metros inv√°lidos para busca de not√≠cias. Por favor, tente novamente.');
      return [];
    }

    if (!newsApiKey) {
      console.error('Chave da API ausente ou inv√°lida.');
      bot.sendMessage(chatId, '‚ùå Erro: Configura√ß√£o da API de not√≠cias inv√°lida. Por favor, contate o administrador.');
      return [];
    }

    // Ajusta a query para melhorar resultados do per√≠odo "hoje"
    const searchQuery = fromDate === toDate 
      ? `${topic} (${fromDate})` 
      : topic;

    const response = await axios.get('https://newsapi.org/v2/everything', {
      params: {
        q: searchQuery,
        from: fromDate,
        to: toDate,
        language: 'pt',
        sortBy: 'publishedAt',
        apiKey: newsApiKey,
      },
    });

    if (!response.data || !Array.isArray(response.data.articles)) {
      console.error('Resposta inesperada da API:', response.data);
      bot.sendMessage(chatId, '‚ùå Erro: Resposta inesperada da API de not√≠cias. Por favor, tente novamente mais tarde.');
      return [];
    }

    const articles = response.data.articles.slice(0, 5); // Limita a 5 not√≠cias
    if (articles.length === 0) {
      bot.sendMessage(chatId, 'üì≠ Nenhuma not√≠cia encontrada para o per√≠odo e t√≥pico selecionados. Tente outro per√≠odo ou t√≥pico.');
      return [];
    }

    return articles;
  } catch (error) {
    console.error('Erro ao buscar not√≠cias:', error.response?.data || error.message || error);
    
    // Mensagens de erro mais espec√≠ficas baseadas no tipo de erro
    if (error.response) {
      switch (error.response.status) {
        case 401:
          bot.sendMessage(chatId, '‚ùå Erro: Chave da API inv√°lida. Por favor, contate o administrador.');
          break;
        case 429:
          bot.sendMessage(chatId, '‚ùå Erro: Limite de requisi√ß√µes excedido. Por favor, tente novamente mais tarde.');
          break;
        default:
          bot.sendMessage(chatId, `‚ùå Erro ao buscar not√≠cias: ${error.response.data.message || 'Erro desconhecido'}`);
      }
    } else if (error.request) {
      bot.sendMessage(chatId, '‚ùå Erro: N√£o foi poss√≠vel conectar √† API de not√≠cias. Verifique sua conex√£o e tente novamente.');
    } else {
      bot.sendMessage(chatId, '‚ùå Erro inesperado ao buscar not√≠cias. Por favor, tente novamente mais tarde.');
    }
    return [];
  }
}

module.exports = fetchNews;

// commit of day! :)
